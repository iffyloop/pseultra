import os

Import('mips_env')

path = Dir('.').abspath

mips_env.Append(CPPPATH = ['./include', './../../include'])

includes = [
    './include/os/assert.h',
    './include/os/boot.h',
    './include/os/event.h',
    './include/os/memory.h',
    './include/os/interfaces.h',
    './include/os/event/event.h',
    './include/os/event/exception.h',
    './include/os/memory/malloc.h',
    './include/os/memory/memcpy.h',
    './include/os/memory/cache.h',
    './include/os/boot/boot.h',
    './include/os/boot/debug.h',
    './include/os/interfaces/pi.h',
    './include/os/interfaces/rsp.h',
    './include/os/interfaces/vi.h',
    './include/os/interfaces/si.h',
]

sources = [
    './src/event/event.c',
    './src/event/exception.c',
    './src/event/exception_s.sx',
    './src/boot/boot.c',
    './src/boot/debug.c',
    './src/boot/font.h',
    './src/boot/reg.h',
    './src/boot/boot_s.sx',
    './src/memory/malloc.c',
    './src/memory/memcpy.c',
    './src/memory/cache_s.sx',
    './src/interfaces/pi.c',
    './src/interfaces/rsp.c',
    './src/interfaces/vi.c',
    './src/interfaces/si.c',
] + includes

oslib_debug = mips_env.GetOption('oslib_debug')

if oslib_debug:
    libpseultra = './lib/libpseultra_d.a'
    mips_env.Append(CCFLAGS = ' -g -D__debug__')
    mips_env.Append(ASFLAGS = ' -g -D__debug__')
else:
    libpseultra = './lib/libpseultra.a'

pseultra = mips_env.Library(
    target = libpseultra,
    source = sources
)

prefix = mips_env.GetOption('prefix')

prefix_bin = prefix + '/bin'
prefix_include = prefix 
prefix_lib = prefix + '/lib'

includes += ['./include/os.sx', './include/os.h']

mips_env.Install(prefix_bin, [])
mips_env.Install(prefix_lib, [pseultra])
install_include = [mips_env.Install(prefix_include + '/' + os.path.dirname(h), h) for h in includes]

install_bin = mips_env.Alias('install-bin', prefix_bin)
install_lib = mips_env.Alias('install-lib', prefix_lib)
install_include = mips_env.Alias('install-include', install_include)

installs = [install_bin, install_lib, install_include]

mips_env.Alias('install', installs)
